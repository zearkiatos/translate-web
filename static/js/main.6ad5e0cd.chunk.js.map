{"version":3,"sources":["contexts/LanguageContext.js","components/field/index.js","contexts/ColorContext.js","components/button/index.js","components/userCreate/index.js","stores/languageStore.js","components/LanguageSelector/index.js","components/App.js","index.js"],"names":["React","createContext","Field","language","field","this","context","text","className","Component","contextType","LanguageContext","Button","color","Consumer","value","renderSubmit","ColorContext","renderButton","UserCreate","LanguageStore","state","onLanguageChange","setState","Provider","props","children","LanguageSelector","onClick","App","ReactDOM","render","document","querySelector"],"mappings":"4LAEeA,MAAMC,cAAc,W,OCC7BC,E,4MAEFC,SAAW,CACP,QAAW,CACP,KAAQ,QAEZ,QAAW,CACP,KAAQ,UAEZ,MAAS,CACL,KAAQ,S,4CAGhB,WACI,IAAMC,EAAQC,KAAKC,QAAQH,SAAWE,KAAKC,QAAQH,SAAWE,KAAKC,QAC7DC,EAAOF,KAAKF,SAASC,GAAOG,KAClC,OACI,sBAAKC,UAAU,WAAf,UACI,gCAAQD,IACR,iC,GAnBIP,IAAMS,WAApBP,EACKQ,YAAcC,EAwBVT,QC1BAF,MAAMC,gBC4CNW,E,4MAzCXT,SAAW,CACP,QAAW,CACP,KAAQ,UAEZ,QAAW,CACP,KAAQ,UAEZ,MAAS,CACL,KAAQ,e,EAIhBU,MAAQ,G,kDAIR,SAAaA,GAAQ,IAAD,OAChB,OACI,wBAAQL,UAAS,oBAAeK,GAAhC,SACI,cAACF,EAAgBG,SAAjB,UACK,SAACC,GAAD,OAAW,EAAKC,aAAaD,U,0BAM9C,SAAaA,GACT,IAAMX,EAAQW,EAAMZ,SAAWY,EAAMZ,SAAWY,EAChD,OAAOV,KAAKF,SAASC,GAAOG,O,oBAEhC,WAAU,IAAD,OACL,OACI,cAACU,EAAaH,SAAd,UACK,SAACD,GAAD,OAAW,EAAKK,aAAaL,U,GAlCzBb,IAAMS,WCSZU,EATI,WACf,OACI,sBAAKX,UAAU,UAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,Q,OCWGY,E,4MAfXC,MAAQ,CAAElB,SAAU,W,EAEpBmB,iBAAmB,SAACnB,GAChB,EAAKoB,SAAS,CAAEpB,c,4CAGpB,WACI,OACI,cAACQ,EAAgBa,SAAjB,CAA0BT,MAAK,2BAAMV,KAAKgB,OAAX,IAAkBC,iBAAkBjB,KAAKiB,mBAAxE,SACKjB,KAAKoB,MAAMC,e,GAVA1B,IAAMS,WCA5BkB,E,4JAEJ,WAAU,IAAD,OACP,OACE,6EAEE,mBACEnB,UAAU,UACVoB,QAAS,kBAAM,EAAKtB,QAAQgB,iBAAiB,cAE/C,mBAAGd,UAAU,UAAUoB,QAAS,kBAAM,EAAKtB,QAAQgB,iBAAiB,YACpE,mBACEd,UAAU,UACVoB,QAAS,kBAAM,EAAKtB,QAAQgB,iBAAiB,qB,GAbxBtB,IAAMS,WAA/BkB,EACGjB,YAAcC,EAmBRgB,QCiBAE,E,4MAhCXR,MAAQ,CAAElB,SAAU,W,EAEpBmB,iBAAmB,SAAAnB,GACf,EAAKoB,SAAS,CAAEpB,c,4CAGpB,WAAU,IAAD,OACL,OACI,sBAAKK,UAAU,eAAf,UACI,eAAC,EAAD,WACI,cAAC,EAAD,IAEA,cAACS,EAAaO,SAAd,CAAuBT,MAAM,MAA7B,SACI,cAAC,EAAD,SAGR,qDAEI,mBAAGP,UAAU,UAAUoB,QAAS,kBAAM,EAAKN,iBAAiB,cAC5D,mBAAGd,UAAU,UAAUoB,QAAS,kBAAM,EAAKN,iBAAiB,YAC5D,mBAAGd,UAAU,UAAUoB,QAAS,kBAAM,EAAKN,iBAAiB,iBAEhE,cAACL,EAAaO,SAAd,CAAuBT,MAAM,UAA7B,SACI,cAACJ,EAAgBa,SAAjB,CAA0BT,MAAOV,KAAKgB,MAAMlB,SAA5C,SACI,cAAC,EAAD,e,GAzBNH,IAAMS,WCHxBqB,IAASC,OACL,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.6ad5e0cd.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext('english');","import React from 'react';\nimport LanguageContext from '../../contexts/LanguageContext';\n\nclass Field extends React.Component {\n    static contextType = LanguageContext;\n    language = {\n        'english': {\n            'text': 'Name'\n        },\n        'spanish': {\n            'text': 'Nombre'\n        },\n        'dutch': {\n            'text': 'Naam'\n        }\n    };\n    render () {\n        const field = this.context.language ? this.context.language : this.context;\n        const text = this.language[field].text;\n        return (\n            <div className=\"ui field\">\n                <label>{text}</label>\n                <input />\n            </div>\n        )\n    }\n}\n\nexport default Field;","import React from 'react';\n\nexport default React.createContext();","import React from 'react';\nimport LanguageContext from '../../contexts/LanguageContext';\nimport ColorContext from '../../contexts/ColorContext';\n\nclass Button extends React.Component {\n    language = {\n        'english': {\n            'text': 'Submit'\n        },\n        'spanish': {\n            'text': 'Enviar'\n        },\n        'dutch': {\n            'text': 'Voorleggen'\n        }\n    };\n\n    color = {\n\n    }\n\n    renderButton(color) {\n        return (\n            <button className={`ui button ${color}`}>\n                <LanguageContext.Consumer>\n                    {(value) => this.renderSubmit(value)}\n                </LanguageContext.Consumer>\n            </button>\n        );\n    }\n\n    renderSubmit(value) {\n        const field = value.language ? value.language : value;\n        return this.language[field].text;\n    }\n    render() {\n        return (\n            <ColorContext.Consumer>\n                {(color) => this.renderButton(color)}\n            </ColorContext.Consumer>\n        )\n    }\n}\n// You can use this way to declarate the contextType\n// Button.contextType = LanguageContext;\n\nexport default Button;","import React from 'react';\nimport Field from '../field';\nimport Button from '../button';\n\nconst UserCreate = () => {\n    return (\n        <div className=\"ui form\">\n            <Field />\n            <Button />\n        </div>\n    );\n}\n\nexport default UserCreate;","import React from 'react';\nimport LanguageContext from '../contexts/LanguageContext'\n\nclass LanguageStore extends React.Component {\n    state = { language: 'english' };\n\n    onLanguageChange = (language) => {\n        this.setState({ language });\n    };\n\n    render() {\n        return (\n            <LanguageContext.Provider value={{...this.state, onLanguageChange: this.onLanguageChange }}>\n                {this.props.children}\n            </LanguageContext.Provider>\n        );\n    }\n}\n\nexport default LanguageStore;","import React from \"react\";\nimport LanguageContext from '../../contexts/LanguageContext';\n\nclass LanguageSelector extends React.Component {\n  static contextType = LanguageContext;\n  render() {\n    return (\n      <div>\n        Select a Language with Redux ⚛️:\n        <i\n          className=\"flag us\"\n          onClick={() => this.context.onLanguageChange(\"english\")}\n        />\n        <i className=\"flag nl\" onClick={() => this.context.onLanguageChange(\"dutch\")} />\n        <i\n          className=\"flag es\"\n          onClick={() => this.context.onLanguageChange(\"spanish\")}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LanguageSelector;\n","import React from 'react';\nimport UserCreate from './userCreate';\nimport LanguageContext from '../contexts/LanguageContext';\nimport LanguageStore from '../stores/languageStore';\nimport ColorContext from '../contexts/ColorContext';\nimport LanguageSelector from '../components/LanguageSelector';\n\nclass App extends React.Component {\n    state = { language: 'english' };\n\n    onLanguageChange = language => {\n        this.setState({ language });\n    };\n\n    render() {\n        return (\n            <div className=\"ui container\">\n                <LanguageStore>\n                    <LanguageSelector />\n\n                    <ColorContext.Provider value=\"red\">\n                        <UserCreate />\n                    </ColorContext.Provider>\n                </LanguageStore>\n                <div>\n                    Select a Language:\n                    <i className=\"flag us\" onClick={() => this.onLanguageChange('english')} />\n                    <i className=\"flag nl\" onClick={() => this.onLanguageChange('dutch')} />\n                    <i className=\"flag es\" onClick={() => this.onLanguageChange('spanish')} />\n                </div>\n                <ColorContext.Provider value=\"primary\">\n                    <LanguageContext.Provider value={this.state.language}>\n                        <UserCreate />\n                    </LanguageContext.Provider>\n                </ColorContext.Provider>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />, document.querySelector('#root')\n);"],"sourceRoot":""}